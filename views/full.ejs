<!DOCTYPE html>
<html>
<head>
<title>Testing with nodejs and knockout</title>

<script type='text/javascript' src='/javascripts/jquery-1.9.0.min.js'></script>
<script type='text/javascript' src='/javascripts/knockout-2.2.1.js'></script>

<link rel="stylesheet" href="/stylesheets/knockout.css" />

<script type='text/javascript'>
/*<![CDATA[*/

/* --------------------  WARNING  ------------------ */
/* MASTER FILE IS FULL.JS, AVOID EDITING OTHER FILES */
/* ------------------------------------------------- */

$(document).ready(function () {

	/* VARIABLES/CONSTANTS */
	var defaultEmail 				= 'get@one.com';
	var defaultTwitter 				= '@riesco';
	var defaultName 				= 'Rambo';
	var defaultMeetupName 			= 'Dynlang';
	var reloadIntervalInSeconds 	= 5; // you may wan't to reduce this value for production

	/* MODELS */
	// interest model
	var Interest = function(input) {
		var self = this;
		if (typeof(input) === 'undefined') { input = { name: 'javascript' }; }	
		self.name 				= ko.observable(input.name);
	}
	// person model
	var Person = function(input) {
		var self = this;
		if (typeof(input) === 'undefined') {
			input = { name: defaultName, twitter: defaultTwitter, email: defaultEmail }; 
		}	
		self.name 				= ko.observable(input.name);
		self.twitter 			= ko.observable(input.twitter);
		self.email 				= ko.observable(input.email);
		self.interests 			= ko.observableArray([]);
		for (var i in input.interests) { self.interests.push( new Interest(input.interests[i]) ) }
		self.addInterest 		= function() { self.interests.push( new Interest() ) }
		self.removeInterest 	= function(item) { self.interests.remove(item) }
	}
	// meetup model
	var Meetup = function(input) {
		var self = this;
		if (typeof(input) === 'undefined') {
			input = { name: defaultMeetupName, date: Date.now }; 
		}
		self.name 				= ko.observable(input.name);
		self.date 				= ko.observable(input.date);
		self.people 			= ko.observableArray([]);
		for (var i in input.people) { self.people.push( new Person(input.people[i]) ) }
		self.addPerson 			= function() { self.people.push( new Person() ) }
		self.removePerson 		= function(item) { self.people.remove(item) }

		self.formattedDate 		= ko.computed(function() {
			var date =  new Date(self.date());
			// return date.toDateString('yyyy-MM-dd'); // @todo: fix this
			return date.toDateString();
		}, self)
	}


	var ViewModel = function() {
		var self = this;
		// meetups
		self.meetups = ko.observableArray([]);
		// holds the new meetup
		self.newMeetup = ko.observableArray( [new Meetup()] );

		/**
		* load entries from db
		*
		* it maps the received data into our objects
		* and then assigns the result to the model
		*/
		self.load = function() {
			$.getJSON('/load', function(data) {
				var mappedMeetups = $.map(data, function(meetup) { return new Meetup(meetup) });
				self.meetups( mappedMeetups );
			}); 
		}

		/* delete all entries from db, then update the interface */
		self.deleteAll = function() {
			$.getJSON("/deleteAll", function(data) {
				self.load();
			}); 
		}

		/* save to db, remember to use ko.toJSON */
		self.save = function() {
			$.ajax({
				type: 'POST',
				url: '/save',
				data: ko.toJSON( self.newMeetup() ),
				success: saveHandler,
				error: errorHandler,
				dataType: 'json',
				contentType: 'application/json' // don't forget this!!!!
			});	
		}

		/* handle */
		function saveHandler(msg) { 
			if (msg.result) {
				self.load();
			} else {
				console.log('ERROR: ' + msg.message);
			}
		}

		/* handle */
		function errorHandler(msg) {
			console.log('ERROR: ' + msg);
		}

	}

	// new instance (only necessary to invoke the load method afterwards)
	var model = new ViewModel();
	// apply bindings
	ko.applyBindings(model); // This makes Knockout get to work
	// load and set an interterval to re-load
	model.load();
	setInterval(model.load, 1000 * reloadIntervalInSeconds);

});
/*]]>*/
</script>
</head>
<body>


<form data-bind="submit: save">
	<div data-bind="foreach: newMeetup" class="newMeetup">
		Meetup whitelist<br>
		<input type="text" data-bind="value: name"><input type="button" data-bind="click: addPerson, enable: people().length < 300" value="+person">
		<div data-bind="foreach: people">
			<div>
				<input type="text" data-bind="value: name">
				<input type="text" data-bind="value: twitter">
				<input type="text" data-bind="value: email">
				<input type="button" data-bind="click: $parent.removePerson" value="x">
				<input type="button" data-bind="click: addInterest, enable: interests().length < 5" value="+interest">
				<div data-bind="foreach: interests">
					<input type="text" data-bind="value: name">
					<input type="button" data-bind="click: $parent.removeInterest" value="x">
				</div>	
			</div>
		</div>
		<br>
		<input type="submit" data-bind="click: $parent.save" value="Save">
	</div>
	
</form>

<br>

<div data-bind="foreach: meetups">
	<div class="meetupContainer">
		Meetup: <span data-bind="text: name"></span> (<span data-bind="text: formattedDate"></span>)
		<br>
		<span data-bind="if: people().length > 0">Participants:</span>
		<ol data-bind="foreach: people">
			<li>
				<span data-bind="text: name"></span>
				<a data-bind="attr: { href: 'mailto:' + email(), title: 'email' }">(<span data-bind="text: email"></span>)</a>
				<a data-bind="attr: { href: 'https://twitter.com/' + twitter(), title: 'twitter account' }"><span data-bind="text: twitter"></span></a>
				<div>
					
				<span data-bind="visible: interests().length > 0">Interests:</span>
					<span data-bind="foreach: interests">
						&nbsp;<a data-bind="attr: { href: 'https://www.google.com/?q=' + name() + '#hl=en&tbo=d&output=search&sclient=psy-ab&q=' + name() + '&fp=1:', title: 'link' }"><span data-bind="text: name"></span></a>
					</span>	
				</div>
			</li>
		</ol>
		<span data-bind="if: people().length == 0">There was no one there? Really?</span>
	</div>
</div>

<div class="deleteAll">
	<input type="button" data-bind="click: deleteAll" value="DELETE ALL ENTRIES">
</div>


</body>
</html>